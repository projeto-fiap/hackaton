hackaton:
  keycloak-url: http://keycloak-service.default-namespace.svc.cluster.local
  keycloak-realm: master
  keycloak-clientSecret: "**********"


server:
  port: 8084  
spring:
  kafka:
    bootstrap-servers: ${KAFKA_SERVER}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      batch-size: 52428800
      buffer-memory: 52428800
      acks: all
      max-request-size: 52428800  # 50MB
      max-partition-fetch-bytes: 52428800  # 50MB
  consumer:
    group-id: video-service
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: tech.fiap.hackaton.internal.infra.VideoProducerDeserializer

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

  application:
    name: project

  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://projetofiap.cv8qzjssaviw.us-east-1.rds.amazonaws.com/projetofiap?currentSchema=public}
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    drop-first: true
    enabled: true

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        globally_quoted_identifiers: true
        show_sql: true

  main:
    allow-bean-definition-overriding: true
  logging:
    level:
      org.springframework.security: DEBUG
      org.springframework.web: DEBUG
      tech.fiap.hackaton: DEBUG

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak-service.default-namespace.svc.cluster.local/realms/master
